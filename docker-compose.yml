services:
  mcp-filesystem:
    build:
      context: ./mcp-services
      dockerfile: Dockerfile
    container_name: docker-site-mcp-filesystem
    restart: unless-stopped
    user: "1000:1000"
    mem_limit: "512m"
    cpus: "0.5"
    volumes:
      - ./view:/app/projects:ro
    environment:
      - NODE_ENV=production
      - MCP_EXCLUDED_PATTERNS=".env,.htpasswd,*.pem,*.key"
      - PORT=8082
    command: ["/app/projects"]
    ports:
      - "8082:8082"
    networks:
      - mcp-net
    tty: true
    stdin_open: true

  mcp-brave-search:
    build:
      context: ./mcp-services
      dockerfile: brave.Dockerfile
    container_name: docker-site-mcp-brave-search
    restart: unless-stopped
    user: "1000:1000"
    mem_limit: "512m"
    cpus: "0.5"
    environment:
      - NODE_ENV=production
      - PORT=8083
      - BRAVE_API_KEY=${BRAVE_API_KEY}
    ports:
      - "8083:8083"
    networks:
      - mcp-net
    tty: true
    stdin_open: true

  mcp-puppeteer:
    build:
      context: ./mcp-services
      dockerfile: puppeteer.Dockerfile
    container_name: docker-site-mcp-puppeteer
    restart: unless-stopped
    user: "1000:1000"
    mem_limit: "512m"
    cpus: "0.5"
    environment:
      - NODE_ENV=production
      - PORT=8084
    ports:
      - "8084:8084"
    networks:
      - mcp-net
    tty: true
    stdin_open: true

  mcp-memory:
    build:
      context: ./mcp-services
      dockerfile: memory.Dockerfile
    container_name: docker-site-mcp-memory
    restart: unless-stopped
    user: "1000:1000"
    mem_limit: "512m"
    cpus: "0.5"
    environment:
      - NODE_ENV=production
      - PORT=8085
    ports:
      - "8085:8085"
    networks:
      - mcp-net
    tty: true
    stdin_open: true

  mcp-everything:
    build:
      context: ./mcp-services
      dockerfile: everything.Dockerfile
    container_name: docker-site-mcp-everything
    restart: unless-stopped
    user: "1000:1000"
    mem_limit: "512m"
    cpus: "0.5"
    environment:
      - NODE_ENV=production
      - PORT=8086
    ports:
      - "8086:8086"
    networks:
      - mcp-net
    tty: true
    stdin_open: true

networks:
  mcp-net:
    driver: bridge
    # Add internal: true if services should only communicate with each other and not externally,
    # except through explicitly mapped ports. For this task, we'll assume default bridge behavior is fine
    # unless further restrictions are needed.
